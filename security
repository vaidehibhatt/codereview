from flask import Flask, request, jsonify
from flask_bcrypt import Bcrypt
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

app = Flask(_name_)
bcrypt = Bcrypt(app)
limiter = Limiter(app, key_func=get_remote_address)

# Simulating a database with a dictionary (for demo purposes)
users_db = {
    "admin": bcrypt.generate_password_hash("password123").decode('utf-8')  # Hashed password
}

# Rate limit: Allow max 5 login attempts per minute per IP
@limiter.limit("5 per minute")
@app.route('/login', methods=['POST'])
def login():
    data = request.json
    username = data.get('username')
    password = data.get('password')

    # Validate input
    if not username or not password:
        return jsonify({"message": "Username and password are required"}), 400

    # Check if user exists
    if username in users_db:
        stored_password_hash = users_db[username]
        if bcrypt.check_password_hash(stored_password_hash, password):
            return jsonify({"message": "Login successful"}), 200
        else:
            return jsonify({"message": "Invalid credentials"}), 401
    else:
        return jsonify({"message": "Invalid credentials"}), 401

if _name_ == '_main_':
    app.run(debug=False)  
